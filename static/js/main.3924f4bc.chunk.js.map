{"version":3,"sources":["cmps/Header/Header.js","pages/SignupPage/SignupPage.js","services/BitcoinService.js","cmps/MovesList/MovesList.js","pages/HomePage/HomePage.js","cmps/ContactPreview/ContactPreview.js","cmps/ContactList/ContactList.js","cmps/ContactFilter/ContactFilter.js","pages/ContactPage/ContactPage.js","cmps/TransferFund/TransferFund.js","services/ContactService.js","services/StorageService.js","services/UserService.js","pages/ContactDetailsPage/ContactDetailsPage.js","pages/ContactEditPage/ContactEditPage.js","cmps/Chart/Chart.js","pages/StatisticPage/StatisticPage.js","App.js","store/UserStore.js","store/ContactStore.js","serviceWorker.js","index.js","store/RootStore.js"],"names":["Header","react_default","a","createElement","className","NavLink","activeClassName","exact","to","index_es","size","icon","SignupPage","inject","observer","userStore","_this","props","store","handleChange","e","userName","target","value","handleSubmit","preventDefault","signup","history","push","user","this","onSubmit","type","placeholder","name","onChange","Component","observable","BitcoinService","getBTC","coins","axios","get","concat","then","res","data","getMarketPrice","getConfirmedTransactions","MovesList_MovesList","_ref","movesList","title","map","move","key","at","Date","toLocaleTimeString","toLocaleDateString","amount","HomePage","coinCount","BTC","lastMoves","moves","filter","idx","length","reverse","toLocaleString","ContactPreview","contact","Link","_id","src","alt","ContactList","contacts","cmps_ContactPreview_ContactPreview","ContactFilter_ContactFilter","onFilterNameChange","ContactPage","contactStore","handleNameChange","_callee","regenerator_default","wrap","_context","prev","next","fetchContacts","term","toLocaleLowerCase","nameFilter","stop","cmps_ContactList_ContactList","TransferFund","onTransferCoins","min","max","maxCoins","email","phone","_addContact","Promise","resolve","reject","arguments","undefined","txt","possible","i","charAt","Math","floor","random","_makeId","unshift","ContactService","getContacts","filterBy","contactsToReturn","includes","sort","b","getContactById","id","find","deleteContact","index","findIndex","splice","saveContact","c","_updateContact","getEmptyContact","StorageService","loadFromStorage","val","localStorage","getItem","JSON","parse","saveToStorage","stringify","UserService","getUser","console","log","addMove","alert","toId","now","ContactDetailsPage","handleTransferCoins","fetchUser","goBack","match","params","_this2","contactMoves","onClick","cmps_TransferFund_TransferFund","ContactEditPage","state","remove","setState","Object","objectSpread","defineProperty","_callee2","_context2","Chart","currChart","build","values","y","color","description","StatisticPage","marketPrice","confirmedTransactions","_this$state","Chart_Chart","library","add","faHome","faUsers","faChartLine","faDollarSign","faCoins","faUserEdit","faArrowCircleLeft","faTrashAlt","faPlusCircle","PrivateRoute","isLoggedIn","Route","Redirect","App","HashRouter","cmps_Header_Header","Switch","path","render","pages_SignupPage_SignupPage","App_PrivateRoute","component","UserStore","rootStore","classCallCheck","initializerDefineProperty","UserStore_descriptor","action","ContactStore","ContactStore_descriptor","ContactStore_descriptor2","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","RootStore","ReactDOM","index_module","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3924f4bc.chunk.js","sourcesContent":["import React from 'react';\r\nimport {  NavLink } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n\r\nimport './Header.scss'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n        <ul>\r\n          <li>\r\n            <NavLink   activeClassName=\"activeNavLink\" exact to=\"/\"><FontAwesomeIcon  size=\"2x\" icon=\"home\" /></NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink  activeClassName=\"activeNavLink\" to=\"/contact\"><FontAwesomeIcon  size=\"2x\" icon=\"users\" /></NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink   activeClassName=\"activeNavLink\" to=\"/statistics\"><FontAwesomeIcon size=\"2x\" icon=\"chart-line\" /></NavLink>\r\n          </li>\r\n        </ul>\r\n      </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","\r\nimport React, { Component } from 'react'\r\nimport { observable } from 'mobx';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nimport './SignupPage.scss'\r\n\r\n@inject('store')\r\n@observer\r\nclass SignupPage extends Component {\r\n    userStore = this.props.store.userStore\r\n\r\n    @observable\r\n    userName = ''\r\n\r\n    handleChange = e => {\r\n        this.userName = e.target.value;\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.userStore.signup(this.userName);\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    render() {\r\n        const user = this.userName\r\n        return (\r\n            <div className=\"signupPage\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input type=\"text\" placeholder=\"Enter Your Name\" name=\"name\" value={user} onChange={this.handleChange} />\r\n                    <button className=\"button button1\">Signup</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignupPage\r\n","import axios from 'axios'\r\n\r\nfunction getBTC(coins) {\r\n    return  axios.get(`https://blockchain.info/tobtc?currency=USD&value=${1/coins}`)\r\n    .then(res => 1/res.data);\r\n}\r\nfunction getMarketPrice() {\r\n    return  axios.get(`https://api.blockchain.info/charts/market-price?format=json&cors=true`)\r\n    .then(res => res.data);\r\n}\r\n\r\nfunction getConfirmedTransactions() {\r\n    return  axios.get(`https://api.blockchain.info/charts/n-transactions?format=json&cors=true`)\r\n    .then(res => res.data);\r\n}\r\n\r\n\r\n\r\nexport default {\r\n    getBTC,\r\n    getMarketPrice,\r\n    getConfirmedTransactions\r\n}","import React from 'react';\r\nimport './MovesList.scss';\r\n\r\nexport default ({ movesList, title }) => {\r\n  return (\r\n    movesList && <div className=\"movesList\">\r\n      <h1>{title}</h1>\r\n      <ul className=\"contact-list\">\r\n        {\r\n          movesList.map(move =>\r\n            <li key={move.at}>\r\n              <div><b>To:</b> {move.to}</div>\r\n              <div><b>At:</b> {new Date(move.at).toLocaleTimeString() +\r\n      ' | ' + new Date(move.at).toLocaleDateString()}</div>\r\n              <div><b>Amount:</b> {move.amount}</div>\r\n            </li>\r\n          )\r\n        }\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n\r\nimport BitcoinService from '../../services/BitcoinService.js'\r\nimport MovesList from '../../cmps/MovesList'\r\nimport { observable } from 'mobx';\r\n\r\nimport './HomePage.scss'\r\n\r\n@inject('store')\r\n@observer\r\nclass HomePage extends Component {\r\n\r\n    @observable\r\n    user = this.props.store.userStore.user\r\n\r\n    @observable\r\n    BTC = null\r\n\r\n    async componentDidMount() {\r\n        this.BTC = await BitcoinService.getBTC(this.props.store.userStore.user.coinCount);\r\n    }\r\n    render() {\r\n        const lastMoves = this.user.moves.filter((move, idx, moves) => { return idx > (moves.length - 4) }).reverse()\r\n        return (\r\n            this.user && this.BTC && <section className=\"homePage\">\r\n                <h1>Hello {this.user.name}!</h1>\r\n                <h4><FontAwesomeIcon icon=\"coins\" />Coins: {this.user.coinCount}</h4>\r\n                <h4><FontAwesomeIcon icon=\"dollar-sign\" /> &nbsp;BTC: {this.BTC.toLocaleString()}$ </h4>\r\n                <MovesList title={\"Your Last 3 Moves\"} movesList={lastMoves} />\r\n               \r\n\r\n            </section>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default HomePage","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './ContactPreview.scss'\r\n\r\n\r\n\r\nconst ContactPreview = ({ contact }) => {\r\n  return (\r\n    contact &&\r\n    <li className=\"contact\">\r\n      <Link to={`/contact/${contact._id}`}>\r\n        <div className=\"contactPreview\">\r\n          <img src={`https://api.adorable.io/avatars/110/${contact._id}.png`} alt=\"\" />\r\n          <h2>{contact.name}</h2>\r\n        </div>\r\n      </Link>\r\n    </li>\r\n  )\r\n}\r\n\r\n\r\nexport default ContactPreview","import React from 'react';\r\n\r\nimport ContactPreview from '../ContactPreview'\r\nimport './ContactList.scss'\r\n\r\nconst ContactList = ({contacts}) => {\r\n    return (\r\n        contacts && <ul className=\"contactList\">\r\n            {\r\n                contacts.map(contact =>\r\n                    <ContactPreview key={contact._id} contact={contact} />\r\n                )\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ContactList\r\n","import React from 'react';\r\nimport './ContactFilter.scss';\r\n\r\nexport default props => {\r\n  return (\r\n    <div className=\"contactFilter\">\r\n      <div>\r\n        <label>\r\n          <input\r\n            placeholder=\"Search Contact\"\r\n            type=\"text\"\r\n            value={props.value}\r\n            onChange={props.onFilterNameChange}\r\n          />\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { observer, inject } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\n\r\n\r\nimport ContactList from '../../cmps/ContactList'\r\nimport ContactFilter from '../../cmps/ContactFilter'\r\n\r\nimport './ContactPage.scss'\r\n\r\n\r\n@inject('store')\r\n@observer\r\nclass ContactPage extends Component {\r\n    contactStore = this.props.store.contactStore\r\n\r\n    @observable\r\n    nameFilter = ''\r\n\r\n    async componentDidMount() {\r\n        this.contactStore.fetchContacts()\r\n    }\r\n\r\n    handleNameChange = async e => {\r\n        const { value } = e.target;\r\n        this.contactStore.fetchContacts({ term: value.toLocaleLowerCase() });\r\n        this.nameFilter = value;\r\n    };\r\n\r\n    render() {\r\n        const { contacts } = this.contactStore\r\n        return (\r\n            contacts && <section className=\"contactPage\">\r\n                <ContactFilter\r\n                    value={this.nameFilter}\r\n                    onFilterNameChange={this.handleNameChange} />\r\n                <ContactList contacts={contacts} />\r\n                <Link className=\"addContactButton\" to=\"/contact/edit\"> <FontAwesomeIcon size=\"3x\" icon=\"plus-circle\"/></Link>\r\n            </section>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default ContactPage\r\n\r\n","\r\nimport React from 'react'\r\n\r\nimport './TransferFund.scss'\r\n\r\nconst TransferFund = (props) => {\r\n    var amount\r\n    return (\r\n        <div className=\"transferFund\">\r\n            <form onSubmit={e => {\r\n                e.preventDefault()\r\n                props.onTransferCoins(amount)\r\n            }} >\r\n                <h3>Transfer coins to {props.contact.name}:</h3>\r\n                <div className=\"inputContainer\">\r\n                    <label>\r\n                        <b>Amount:</b>&nbsp;\r\n                        <input\r\n                            type=\"number\"\r\n                            min=\"0\"\r\n                            max={props.maxCoins}\r\n                            value={props.value}\r\n                            onChange={e => amount = e.target.value}\r\n                            placeholder=\"numbers only\"\r\n                        />\r\n                    </label>\r\n                    <button className=\"button\"><b>Transfer</b></button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TransferFund\r\n\r\n","\r\nconst contacts = [\r\n  {\r\n    \"_id\": \"5a56640269f443a5d64b32ca\",\r\n    \r\n    \"name\": \"Ochoa Hyde\",\r\n    \"email\": \"ochoahyde@renovize.com\",\r\n    \"phone\": \"+1 (968) 593-3824\",\r\n    \"coinCount\": \"30\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664025f6ae9aa24a99fde\",\r\n\r\n     \"name\": \"Hallie Mclean\",\r\n    \"email\": \"halliemclean@renovize.com\",\r\n    \"phone\": \"+1 (948) 464-2888\",\r\n    \"coinCount\": \"30\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640252d6acddd183d319\",\r\n \r\n    \"name\": \"Parsons Norris\",\r\n    \"email\": \"parsonsnorris@renovize.com\",\r\n    \"phone\": \"+1 (958) 502-3495\",\r\n    \"coinCount\": \"30\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402ed1cf349f0b47b4d\",\r\n \r\n    \"name\": \"Rachel Lowe\",\r\n    \"email\": \"rachellowe@renovize.com\",\r\n    \"phone\": \"+1 (911) 475-2312\",\r\n    \"coinCount\": \"30\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402abce24c6bfe4699d\",\r\n \r\n    \"name\": \"Dominique Soto\",\r\n    \"email\": \"dominiquesoto@renovize.com\",\r\n    \"phone\": \"+1 (807) 551-3258\",\r\n    \"coinCount\": \"30\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402a6499c1d4da9220a\",\r\n \r\n    \"name\": \"Shana Pope\",\r\n    \"email\": \"shanapope@renovize.com\",\r\n    \"phone\": \"+1 (970) 527-3082\",\r\n    \"coinCount\": \"30\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402f90ae30e97f990db\",\r\n \r\n    \"name\": \"Faulkner Flores\",\r\n    \"email\": \"faulknerflores@renovize.com\",\r\n    \"phone\": \"+1 (952) 501-2678\",\r\n    \"coinCount\": \"30\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664027bae84ef280ffbdf\",\r\n \r\n    \"name\": \"Holder Bean\",\r\n    \"email\": \"holderbean@renovize.com\",\r\n    \"phone\": \"+1 (989) 503-2663\",\r\n    \"coinCount\": \"30\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402e3b846c5f6aec652\",\r\n \r\n    \"name\": \"Rosanne Shelton\",\r\n    \"email\": \"rosanneshelton@renovize.com\",\r\n    \"phone\": \"+1 (968) 454-3851\",\r\n    \"coinCount\": \"30\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640272c7dcdf59c3d411\",\r\n \r\n    \"name\": \"Pamela Nolan\",\r\n    \"email\": \"pamelanolan@renovize.com\",\r\n    \"phone\": \"+1 (986) 545-2166\",\r\n    \"coinCount\": \"30\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664029a8dd82a6178b15f\",\r\n \r\n    \"name\": \"Roy Cantu\",\r\n    \"email\": \"roycantu@renovize.com\",\r\n    \"phone\": \"+1 (929) 571-2295\",\r\n    \"coinCount\": \"30\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664028c096d08eeb13a8a\",\r\n \r\n    \"name\": \"Ollie Christian\",\r\n    \"email\": \"olliechristian@renovize.com\",\r\n    \"phone\": \"+1 (977) 419-3550\",\r\n    \"coinCount\": \"30\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664026c53582bb9ebe9d1\",\r\n \r\n    \"name\": \"Nguyen Walls\",\r\n    \"email\": \"nguyenwalls@renovize.com\",\r\n    \"phone\": \"+1 (963) 471-3181\",\r\n    \"coinCount\": \"30\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640298ab77236845b82b\",\r\n \r\n    \"name\": \"Glenna Santana\",\r\n    \"email\": \"glennasantana@renovize.com\",\r\n    \"phone\": \"+1 (860) 467-2376\",\r\n    \"coinCount\": \"30\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640208fba3e8ecb97305\",\r\n \r\n    \"name\": \"Malone Clark\",\r\n    \"email\": \"maloneclark@renovize.com\",\r\n    \"phone\": \"+1 (818) 565-2557\",\r\n    \"coinCount\": \"30\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402abb3146207bc4ec5\",\r\n \r\n    \"name\": \"Floyd Rutledge\",\r\n    \"email\": \"floydrutledge@renovize.com\",\r\n    \"phone\": \"+1 (807) 597-3629\",\r\n    \"coinCount\": \"30\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640298500fead8cb1ee5\",\r\n \r\n    \"name\": \"Grace James\",\r\n    \"email\": \"gracejames@renovize.com\",\r\n    \"phone\": \"+1 (959) 525-2529\",\r\n    \"coinCount\": \"30\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640243427b8f8445231e\",\r\n \r\n    \"name\": \"Tanner Gates\",\r\n    \"email\": \"tannergates@renovize.com\",\r\n    \"phone\": \"+1 (978) 591-2291\",\r\n    \"coinCount\": \"30\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664025c3abdad6f5e098c\",\r\n \r\n    \"name\": \"Lilly Conner\",\r\n    \"email\": \"lillyconner@renovize.com\",\r\n    \"phone\": \"+1 (842) 587-3812\",\r\n    \"coinCount\": \"30\"\r\n  }\r\n];\r\n\r\nfunction sort(arr) {\r\n  return arr.sort( (a, b) => {\r\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\r\n      return -1;\r\n    }\r\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\r\n      return 1;\r\n    }\r\n\r\n    return 0;\r\n  })\r\n}\r\n\r\nfunction getContacts (filterBy = null) {\r\n  return new Promise((resolve, reject) => { \r\n    var contactsToReturn = contacts;\r\n    if (filterBy) {\r\n      const {term} = filterBy;\r\n      contactsToReturn = contacts.filter( contact => {\r\n        return contact.name.toLocaleLowerCase().includes(term) ||\r\n               contact.phone.toLocaleLowerCase().includes(term) ||\r\n               contact.email.toLocaleLowerCase().includes(term)\r\n      })\r\n    }\r\n    resolve(sort(contactsToReturn))\r\n  })\r\n}\r\n\r\nfunction getContactById (id) {\r\n    return new Promise((resolve, reject) => {\r\n      const contact = contacts.find( contact => contact._id === id)\r\n      contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\r\n    })\r\n}\r\n\r\nfunction deleteContact(id) {\r\n  return new Promise((resolve, reject) => { \r\n    const index = contacts.findIndex( contact => contact._id === id)\r\n    if (index !== -1) {\r\n      contacts.splice(index, 1)\r\n    }\r\n\r\n    resolve(contacts)\r\n  })\r\n}\r\n\r\nfunction _updateContact(contact) {\r\n  return new Promise((resolve, reject) => { \r\n    const index = contacts.findIndex( c => contact._id === c._id)\r\n    if (index !== -1) {\r\n      contacts[index] = contact\r\n    }\r\n    resolve(contact)\r\n  })\r\n}\r\n\r\nfunction _addContact(contact) {\r\n  return new Promise((resolve, reject) => { \r\n    contact._id = _makeId()\r\n    contacts.unshift(contact)\r\n    resolve(contact)\r\n  })\r\n}\r\n\r\nfunction saveContact(contact) {\r\n  return contact._id ? _updateContact(contact) : _addContact(contact)\r\n}\r\n\r\nfunction getEmptyContact() {\r\n  return {\r\n    name: '',\r\n    email: '',\r\n    phone: ''\r\n  }\r\n}\r\n\r\nfunction filter (term) {\r\n  term = term.toLocaleLowerCase()\r\n  return new Promise((resolve, reject) => { \r\n    const c = contacts.filter( contact => {\r\n      return contact.name.toLocaleLowerCase().includes(term) ||\r\n             contact.phone.toLocaleLowerCase().includes(term) ||\r\n             contact.email.toLocaleLowerCase().includes(term)\r\n    })\r\n\r\n    resolve(c)\r\n  })\r\n}\r\n\r\nexport default {\r\n  getContacts,\r\n  getContactById,\r\n  deleteContact,\r\n  filter,\r\n  saveContact,\r\n  getEmptyContact\r\n}\r\n\r\nfunction _makeId(length = 10) {\r\n  var txt = ''\r\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n  for (var i = 0; i < length; i++) {\r\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n  }\r\n  return txt\r\n}","function loadFromStorage(key) {\r\n    var val = localStorage.getItem(key)\r\n    return (val)? JSON.parse(val) : null;\r\n}\r\n\r\nfunction saveToStorage(key, val) {\r\n    localStorage[key] = JSON.stringify(val);\r\n}\r\n\r\n\r\nexport default {\r\n    loadFromStorage,\r\n    saveToStorage\r\n\r\n}","import StorageService from './StorageService'\r\n\r\nconst user =\r\n{\r\n    \"_id\": \"5a56640269f443a5d64b32xd\",\r\n    \"email\": \"puki@renovize.com\",\r\n    \"name\": '',\r\n    \"phone\": \"+1 (968) 593-3859\",\r\n    \"coinCount\": \"30\",\r\n    \"moves\": []\r\n}\r\n\r\nfunction getUser() {\r\n    const user = StorageService.loadFromStorage('user')\r\n    var userToReturn = user ? user : null;\r\n    return userToReturn\r\n}\r\n\r\nfunction signup(name) {\r\n    user.name = name\r\n    StorageService.saveToStorage('user', user)\r\n    console.log('user:', user);\r\n}\r\n\r\nfunction addMove(contact, amount) {\r\n    if (!amount) return\r\n    const user = StorageService.loadFromStorage('user')\r\n    if (amount > user.coinCount) return alert('You have only ', user.coinCount, ' coins')\r\n    user.coinCount -= amount\r\n    user.moves.push({\r\n        toId: contact._id,\r\n        to: contact.name,\r\n        amount,\r\n        at: Date.now(),\r\n    })\r\n    StorageService.saveToStorage('user', user)\r\n    console.log(amount + ' coins moved to ' + contact.name);\r\n    console.log('Your current coins is ', user.coinCount);\r\n\r\n}\r\n\r\nexport default {\r\n    getUser,\r\n    signup,\r\n    addMove\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n\r\nimport MovesList from '../../cmps/MovesList'\r\nimport TransferFund from '../../cmps/TransferFund'\r\n\r\nimport ContactService from '../../services/ContactService.js'\r\nimport UserService from '../../services/UserService.js'\r\n\r\nimport './ContactDetailsPage.scss'\r\n\r\n@inject('store')\r\n@observer\r\nclass ContactDetailsPage extends Component {\r\n\r\n    @observable\r\n    contact = null\r\n\r\n    async componentDidMount() {\r\n        this.contact = await ContactService.getContactById(this.props.match.params.id);\r\n    }\r\n\r\n    handleTransferCoins = amount => {\r\n        console.log('onTransferCoins:', amount);\r\n        UserService.addMove(this.contact, amount)\r\n        this.props.store.userStore.fetchUser()\r\n    }\r\n\r\n    goBack = () => {\r\n        const { history } = this.props;\r\n        history.push('/contact');\r\n    }\r\n\r\n    render() {\r\n        if (!this.contact) return <div>Loading</div>\r\n        const { user } = this.props.store.userStore\r\n        const contactMoves = user.moves.filter(move => { return move.toId === this.contact._id })\r\n        return (\r\n            this.contact &&\r\n            <section className=\"contactDetailsPage\">\r\n                <div className=\"buttons-container\">\r\n                    <div className=\"button\" onClick={this.goBack}>\r\n                        <FontAwesomeIcon size=\"lg\" icon=\"arrow-circle-left\" />\r\n                    </div>\r\n                    <Link className=\"button\" to={`/contact/edit/${this.contact._id}`}>\r\n                        <FontAwesomeIcon size=\"lg\" icon=\"user-edit\" />\r\n                    </Link>\r\n                </div>\r\n                <div>\r\n                    <img src={`https://api.adorable.io/avatars/120/${this.contact._id}.png`} alt=\"\" />\r\n                </div>\r\n                <h3>  {this.contact.name} </h3>\r\n                <li> <b>Phone:</b> {this.contact.phone} </li>\r\n                <li> <b>Email:</b> {this.contact.email} </li>\r\n                <TransferFund contact={this.contact} maxCoins={user.coinCount} onTransferCoins={this.handleTransferCoins} />\r\n                <MovesList title={\"Your Moves\"} movesList={contactMoves} />\r\n            </section>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default ContactDetailsPage\r\n\r\n","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport ContactService from '../../services/ContactService.js'\r\n\r\nimport './ContactEditPage.scss'\r\n\r\nclass ContactEditPage extends Component {\r\n\r\n    state = {\r\n        contact: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        const contact = this.props.match.params.id ?\r\n            await ContactService.getContactById(this.props.match.params.id) :\r\n            {\r\n                name: '',\r\n                email: '',\r\n                phone: ''\r\n            }\r\n        this.setState({ contact })\r\n\r\n    }\r\n    remove = async () => {\r\n        await ContactService.deleteContact(this.state.contact._id);\r\n        const { history } = this.props;\r\n        history.push('/contact');\r\n    }\r\n\r\n    handleChange = e => {\r\n        const key = e.target.name\r\n        this.setState({ contact: { ...this.state.contact, [key]: e.target.value } });\r\n    };\r\n\r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n        await ContactService.saveContact(this.state.contact);\r\n        const { history } = this.props;\r\n        if (this.props.match.params.id) history.push(`/contact/${this.props.match.params.id}`);\r\n        else if (!this.props.match.params.id) history.push('/contact/');\r\n    };\r\n    goBack = () => {\r\n        const { history } = this.props;\r\n        history.goBack();\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { contact } = this.state\r\n        return (\r\n            contact &&\r\n            <section className=\"contactEditPage\">\r\n                <div className=\"buttons-container\">\r\n                    <div className=\"button\" onClick={this.goBack}>\r\n                        <FontAwesomeIcon size=\"lg\" icon=\"arrow-circle-left\" />\r\n                    </div>\r\n                    {(contact._id && < div className=\"button\" onClick={this.remove}>\r\n                        <FontAwesomeIcon size=\"lg\" icon=\"trash-alt\" />\r\n                    </div>)}\r\n                </div>\r\n                {(contact._id && <h1>Edit Contact</h1>)}\r\n                {(!contact._id && <h1>Add Contact</h1>)}\r\n                <h1>\r\n                    {(contact._id && <img src={`https://api.adorable.io/avatars/120/${contact._id}.png`} alt=\"\" />)}\r\n                </h1>\r\n                <form className=\"formContainer\" onSubmit={this.handleSubmit}>\r\n                    <h3>\r\n                        Name:&nbsp;<input type=\"text\" name=\"name\" value={contact.name} onChange={this.handleChange} />\r\n                    </h3>\r\n                    <h3>\r\n                        Email:&nbsp;<input type=\"text\" name=\"email\" value={contact.email} onChange={this.handleChange} />\r\n                    </h3>\r\n                    <h3>\r\n                        Phone:&nbsp;<input type=\"text\" name=\"phone\" value={contact.phone} onChange={this.handleChange} />\r\n                    </h3>\r\n                    <button className=\"save-button\">Save</button>\r\n                </form>\r\n\r\n            </section>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default ContactEditPage","import React, { Component } from 'react';\r\n\r\n// import '../assets/HomePage.css'\r\nimport { Sparklines, SparklinesLine } from 'react-sparklines';\r\n\r\n\r\n\r\n\r\nexport default class Chart extends Component {\r\n    render() {\r\n        const { currChart } = this.props\r\n        return (\r\n            <section className=\"chart\">\r\n                <h1>{currChart.name}</h1>\r\n                    <Sparklines data={currChart.values.map(value=> value.y)}  >\r\n                        <SparklinesLine color=\"blue\" />\r\n                    </Sparklines>\r\n                <h4>{currChart.description}</h4>\r\n            </section>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport BitcoinService from '../../services/BitcoinService.js'\r\nimport Chart from '../../cmps/Chart'\r\n\r\nimport './StatisticPage.scss'\r\n\r\nclass StatisticPage extends Component {\r\n\r\n    state = {\r\n        marketPrice: null,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const marketPrice = await BitcoinService.getMarketPrice();\r\n        const confirmedTransactions = await BitcoinService.getConfirmedTransactions();\r\n        this.setState({ marketPrice, confirmedTransactions })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { marketPrice, confirmedTransactions } = this.state\r\n        return (\r\n            marketPrice && <section className=\"statisticPage\">\r\n                <Chart currChart={marketPrice} />\r\n                <hr />\r\n                <Chart currChart={confirmedTransactions} />\r\n            </section>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default StatisticPage\r\n\r\n","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\n\r\nimport Header from './cmps/Header';\r\nimport SignupPage from './pages/SignupPage';\r\nimport HomePage from './pages/HomePage';\r\nimport ContactPage from './pages/ContactPage';\r\nimport ContactDetailsPage from './pages/ContactDetailsPage';\r\nimport ContactEditPage from './pages/ContactEditPage';\r\nimport StatisticPage from './pages/StatisticPage';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faHome, faUsers, faChartLine, faDollarSign, faCoins, faUserEdit, faArrowCircleLeft, faTrashAlt, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport './assets/App.css';\r\n\r\nlibrary.add(faHome, faUsers, faChartLine, faDollarSign, faCoins, faUserEdit, faArrowCircleLeft, faTrashAlt, faPlusCircle)\r\n\r\n// import UserService from './services/UserService.js'\r\n\r\n\r\nconst PrivateRoute = props => {\r\n  return props.isLoggedIn ? <Route {...props} /> : <Redirect to=\"/signup\" />;\r\n};\r\n\r\n@inject('store')\r\n@observer\r\nclass App extends Component {\r\n\r\n  render() {\r\n    const { user } = this.props.store.userStore\r\n    return (\r\n      <Router>\r\n        <div>\r\n          {user && <Header />}\r\n          <Switch>\r\n            <Route path=\"/signup\" render={(props) => <SignupPage {...props} />} />\r\n            <PrivateRoute isLoggedIn={!!user} path=\"/\" exact component={HomePage} />\r\n            <PrivateRoute isLoggedIn={!!user} path=\"/contact/edit/:id?\" component={ContactEditPage} />\r\n            <PrivateRoute isLoggedIn={!!user} path=\"/contact/:id\" component={ContactDetailsPage} />\r\n            <PrivateRoute isLoggedIn={!!user} path=\"/contact\" component={ContactPage} />\r\n            <PrivateRoute isLoggedIn={!!user} path=\"/statistics\" component={StatisticPage} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import UserService from '../services/UserService';\r\nimport { observable, action } from 'mobx';\r\n\r\nexport default class UserStore {\r\n    @observable\r\n    user = null;\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n    }\r\n\r\n    @action\r\n    fetchUser() {\r\n        this.user = UserService.getUser();\r\n    }\r\n\r\n    @action\r\n    signup(userName){\r\n        UserService.signup(userName);\r\n        this.fetchUser()\r\n    }\r\n\r\n}\r\n","import ContactService from '../services/ContactService';\r\nimport { observable, action } from 'mobx';\r\n\r\nexport default class ContactStore {\r\n  @observable\r\n  contacts = [];\r\n\r\n  @observable\r\n  currContact = null\r\n\r\n  constructor(rootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @action\r\n  async fetchContacts(filter) {\r\n    this.contacts = await ContactService.getContacts(filter);\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport RootStore from './store/RootStore';\r\nimport { Provider } from 'mobx-react';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst rootStore = new RootStore();\r\nrootStore.userStore.fetchUser()\r\n\r\nReactDOM.render(\r\n    <Provider store={rootStore}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","import UserStore from './UserStore';\r\nimport ContactStore from './ContactStore';\r\n\r\nexport default class RootStore {\r\n  constructor() {\r\n    this.userStore = new UserStore(this);\r\n    this.contactStore = new ContactStore(this);\r\n  }\r\n}\r\n"],"sourceRoot":""}